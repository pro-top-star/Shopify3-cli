{"version":3,"file":"build.js","sourceRoot":"","sources":["build.ts"],"names":[],"mappings":"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","sourcesContent":["import {build as esBuild, BuildFailure, BuildResult, formatMessages} from 'esbuild';\n\nimport {getConfigs} from './configs';\n\nexport interface Options {\n  mode: 'development' | 'production';\n}\n\nexport function build({mode}: Options) {\n  const isDevelopment = mode === 'development';\n  const configs = getConfigs();\n  const {\n    development: {entries, build = {}, develop = {}, buildDir},\n  } = configs;\n  const {env = {}} = isDevelopment ? develop : build;\n  const define = Object.keys(env || {}).reduce(\n    (acc, key) => ({\n      ...acc,\n      [`process.env.${key}`]: JSON.stringify(env[key]),\n    }),\n    {'process.env.NODE_ENV': JSON.stringify(mode)},\n  );\n\n  let built = false;\n\n  esBuild({\n    bundle: true,\n    define,\n    entryPoints: entries,\n    loader: {\n      '.esnext': 'ts',\n      '.js': 'jsx',\n    },\n    logLevel: isDevelopment ? 'silent' : 'info',\n    legalComments: 'none',\n    minify: !isDevelopment,\n    outdir: buildDir,\n    plugins: getPlugins(),\n    target: 'es6',\n    resolveExtensions: ['.tsx', '.ts', '.js', '.json', '.esnext', '.mjs', '.ejs'],\n    watch: isDevelopment ? {onRebuild} : false,\n  })\n    .then((result) => {\n      if (built) {\n        return;\n      }\n      built = true;\n      logResult(result);\n    })\n    .catch((_e) => {\n      console.error('Error building extension: ', _e);\n      process.exit(1);\n    });\n}\n\nfunction getPlugins() {\n  const plugins = [];\n\n  if (graphqlAvailable()) {\n    const {default: graphqlLoader} = require('@luckycatfactory/esbuild-graphql-loader');\n    plugins.push(graphqlLoader());\n  }\n\n  return plugins;\n}\n\nfunction graphqlAvailable() {\n  try {\n    // eslint-disable-next-line babel/no-unused-expressions\n    require.resolve('graphql') && require.resolve('graphql-tag');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nasync function onRebuild(failure: BuildFailure | null, _result: BuildResult | null) {\n  if (failure) {\n    console.error(failure.message);\n  }\n  logResult(failure);\n}\n\nasync function logResult(result: BuildResult | null) {\n  if (result?.errors.length || result?.warnings.length) {\n    logErrors(result);\n    return;\n  }\n  console.log(`Build succeeded`);\n}\n\nasync function logErrors(result: BuildResult) {\n  const errors = await formatMessages(result.errors, {kind: 'error'});\n  const warnings = await formatMessages(result.warnings, {kind: 'warning'});\n  if (errors.length > 0) console.error(errors.join('\\n'));\n  if (warnings.length > 0) console.error(errors.join('\\n'));\n}\n"]}