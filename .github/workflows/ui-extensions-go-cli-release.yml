name: UI Extensions Go CLI Release

on:
  release:
    types: [created, edited]
  pull_request:
    branches: [main]

env:
  GO_VERSION: "1.17"
  YARN_VERSION: "1.22.18"

jobs:
  releases-matrix:
    name: ${{ github.event_name == 'release' && 'Release' || 'Test packaging of' }} shopify-extensions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
        exclude:
          - goarch: "386"
            goos: darwin
        include:
          - goos: darwin
            goarch: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup build toolchain
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Set Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
      - name: Install yarn
        run: npm install --global yarn@${{ env.YARN_VERSION }}
      - name: Install dependencies
        run: yarn install --ignore-engines --frozen-lockfile
      - name: Build and package executable
        working-directory: packages/ui-extensions-go-cli
        run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} yarn package
      - name: Release
        if: ${{ github.event_name == 'release' }}
        working-directory: packages/ui-extensions-go-cli
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token && \
          gh release upload `basename ${{ github.ref }}` shopify-extensions-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}.gz && \
          gh release upload `basename ${{ github.ref }}` shopify-extensions-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}.md5
