name: shopify-cli

on:
  workflow_dispatch:
    inputs:
      nx_level:
        description: 'Command to pass to nx (if you want to run everything: run-many --all)'
        required: true
        default: "affected"
      debug_enabled:
        type: boolean
        description: 'Enable tmate debugging'
        required: false
        default: false
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - '**.md'

concurrency:
  group: shopify-cli-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  DEBUG: "1"
  SHOPIFY_CLI_ENV: development
  SHOPIFY_CONFIG: debug
  YARN_VERSION: "1.22.19"
  RUBY_VERSION: "3.1.2"
  BUNDLER_VERSION: "2.3.18"
  PNPM_VERSION: "7.9.4"
  GO_VERSION: "1.19"

jobs:
  fixture:
    name: Fixture
    runs-on: 'ubuntu-latest'
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Setup deps
        uses: ./.github/actions/setup-cli-deps
        with:
          node-version: ${{ matrix.node }}
      - name: Build the fixture app
        run: yarn shopify app build --path ./fixtures/app
  main:
    name: Node ${{ matrix.node }} in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name != 'pull_request' }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        node: ['14.20.0', '16.17.0', '18.7.0']
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Setup deps
        uses: ./.github/actions/setup-cli-deps
        with:
          node-version: ${{ matrix.node }}
      - name: Build
        run: yarn nx ${{ inputs.nx_level || 'affected' }} --target=build
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == '18.7.0' }}
      - name: Lint
        run: yarn nx ${{ inputs.nx_level || 'affected' }} --target=lint
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == '18.7.0' }}
      - name: Type-check
        run: yarn nx ${{ inputs.nx_level || 'affected' }} --target=type-check
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == '18.7.0' }}
      - name: Unit tests
        run: yarn nx ${{ inputs.nx_level || 'affected' }} --target=test --exclude=features
      - name: Acceptance tests
        if: ${{ matrix.node == '18.7.0' }}
        run: yarn nx run features:test

  pr-platform-agnostic:
    name: ${{ matrix.target }} with Node ${{ matrix.node }} in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name == 'pull_request' }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: ['ubuntu-latest']
        node: ["18.7.0"]
        target: ['build', 'type-check', 'lint']
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Setup deps
        uses: ./.github/actions/setup-cli-deps
        with:
          node-version: ${{ matrix.node }}
      - name: ${{ matrix.target }}
        run: yarn nx ${{ inputs.nx_level || 'run-many --all --skip-nx-cache' }} --target=${{ matrix.target }}

  pr-platform-dependent:
    name: Testing with Node ${{ matrix.node }} in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: pr-platform-agnostic
    if: ${{ github.event_name == 'pull_request' }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        node: ['14.20.0', '16.17.0', '18.7.0']
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Setup deps
        uses: ./.github/actions/setup-cli-deps
        with:
          node-version: ${{ matrix.node }}
      - name: Unit tests
        run: yarn nx ${{ inputs.nx_level || 'run-many --all --skip-nx-cache' }} --target=test --exclude=features
      - name: Acceptance tests
        if: ${{ matrix.node == '18.7.0' }}
        run: yarn nx run features:test
      - name: Setup tmate session
        if: ${{ failure() && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
